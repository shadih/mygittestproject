package juniperES.NTDTicketCorrelation;


#list any import classes here.

import com.hp.uca.expert.x733alarm.PerceivedSeverity;
import com.hp.uca.expert.scenario.Scenario;
import com.hp.uca.expert.scenario.ScenarioStatus;
import com.hp.uca.expert.flag.*;
import com.hp.uca.common.trace.LogHelper;
import com.att.gfp.helper.service_util
import com.att.gfp.helper.GFPFields;
import com.att.gfp.data.ipagJuniperAlarm.EnrichedNTDAlarm;
import com.att.gfp.data.juniperES.helper.SendAlarm;
import com.att.gfp.data.ipagAlarm.EnrichedAlarm
import com.hp.uca.expert.x733alarm.PerceivedSeverity;



#declare any global variables here
global Scenario theScenario;

//
// This rule detects when there is an alarm on each port of a connection link.
//
// In such case it sets the Link state to 'Down'.
// 
rule "New Alarm"
no-loop
      when       
        alarm : EnrichedNTDAlarm(justInserted == true)   
        not Flag(id  matches alarm.identifier )
                        
       then     
       LogHelper.enter(theScenario.getLogger(), drools.getRule().getName());
              
       // This is a new alarm, check for an NTD ticket
       if(alarm.IsNTDExists()) {
       		long waitTime = alarm.TimeRemaining(60000); 
       		if(waitTime > 0) {
      			// a ticket is found but we still have to age it for at least on minute
       			Flag flag=new Flag(alarm.getIdentifier(), "One Minute Wait" , false);

	   			theScenario.getSession().insert(flag);
     			flag.setValue(true);
       		
       			// one minute aging wait time
       			theScenario.addWatchdogItem(waitTime, flag, false, "Flag:" + flag.getDescription(),true);
             } else
             	SendAlarm.send((EnrichedAlarm) alarm, SendAlarm.NTD);
       } else {
            long waitTime = alarm.TimeRemaining(180000); 
       		if(waitTime > 0) {
       			// a ticket does not exist yet so we have to wait three minutes and check again
       			Flag flag=new Flag(alarm.getIdentifier(), "Three Minute Wait" , false);

	   			theScenario.getSession().insert(flag);
     
       			flag.setValue(true);
       		
       			// >= three minute wait time
       			theScenario.addWatchdogItem(waitTime, flag, false, "Flag:" + flag.getDescription(),true);
   	   		} else
   	   			SendAlarm.send((EnrichedAlarm) alarm, SendAlarm.NTD);
   	   	}
   	   
   	   alarm.setJustInserted(false);
  	   theScenario.getSession().update(alarm);
             
       LogHelper.exit(theScenario.getLogger(), drools.getRule().getName());
end

rule "End of 3 minute wait" 
when
     alarm : EnrichedNTDAlarm(justInserted == false)
     myFlag : Flag(value == true, id  matches alarm.identifier,
     				description == "Three Minute Wait")
then
    LogHelper.enter(theScenario.getLogger(), drools.getRule().getName()); 
	 
	// check for a ticket and update the alarm if found
 	alarm.IsNTDExists();
 	
 	// send the alarm whether updated or not updated alarm
 	SendAlarm.send((EnrichedAlarm) alarm, SendAlarm.NTD);
        
    //theScenario.getSession().retract(alarm);
    theScenario.getSession().retract(myFlag); 
end


rule "End of 1 minute wait" 
when
     alarm : EnrichedNTDAlarm(justInserted == false)
     myFlag : Flag(value == true, id  matches alarm.identifier,
     				description == "One Minute Wait")
then
    LogHelper.enter(theScenario.getLogger(), drools.getRule().getName()); 
 	
 	// our one minute aging is complete so we can now finish processing 
 	// this alarm
 	 
 	// send the alarm whether updated or not
 	SendAlarm.send((EnrichedAlarm) alarm, SendAlarm.NTD);
        
    //theScenario.getSession().retract(alarm);
    theScenario.getSession().retract(myFlag); 
end
	
rule "Flag Garbage collection"
when
     myFlag : Flag()
     not (EnrichedNTDAlarm( identifier matches myFlag.id))
then
    LogHelper.enter(theScenario.getLogger(), drools.getRule().getName()); 

	// a flag exists but no alarm.   The alarm was cleared before the time period.	 
    theScenario.getSession().retract(myFlag); 
end


